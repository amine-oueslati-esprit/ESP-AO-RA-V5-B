package com.example.riskassessment.RC;

import com.example.riskassessment.DAO.Entities.Vulnerability;
import com.example.riskassessment.Services.Interfaces.IVulnerabilityService;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequiredArgsConstructor
@CrossOrigin(origins = "*")
@RequestMapping("/Vulnerabilities")
public class VulnerabilityC {
    private final IVulnerabilityService VulnerabilityRest;

    @PostMapping("/addVulnerability")
    Vulnerability ajouterVulnerabilite(@RequestBody Vulnerability x){
        return VulnerabilityRest.addVulnerabilite(x);
    }

    @PutMapping("/updateVulnerability/{id}")
    Vulnerability updateVulnerabilite(@PathVariable long id, @RequestBody Vulnerability x){
        return VulnerabilityRest.updateVulnerabilite(id, x);
    }

    @DeleteMapping("/deleteVulnerability")
    void deleteVulnerabilite(Vulnerability x){
        VulnerabilityRest.deleteVulnerabilite(x);
    }

    @DeleteMapping("/deleteVulnerabilityById/{id}")
    void  deleteVulnerabiliteById(@PathVariable long id){
        VulnerabilityRest.deleteVulnerabilite(id);
    }

    @GetMapping("/findAllVulnerabilities")
    List<Vulnerability> findAll(){
        return VulnerabilityRest.findAll();
    }

    @GetMapping("/findOneVulnerabilityById/{id}")
    Vulnerability findById(@PathVariable long id){
        return VulnerabilityRest.findById(id);
    }
}
